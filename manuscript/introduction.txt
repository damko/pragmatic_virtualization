# Introduction

This is a short, modest and straightforward manual written with pragmatism in mind which sums up my experiences with virtualization <!-- TODO link to virtualization.txt? -->.

If you don't know what's the meaning of _virtualization_, I will describe it better later on but, for now, consider it as _a set of theories and technologies that allows you to run virtual computers inside your own computer_. Yes, like a matryoshka.

## What to expect from this manual

The aim of this manual is to help you to hit the ground running with virtualization.

Nowadays virtualization is considered a common practice in many activities, especially in development, and brings great advantages (see the [virtualization paragraph](#virtualization_paragraph)).

I tried to keep things simple and to limit assumptions so that the reading will be easy also for total beginners in virtualization and in applications development.

I will not cover in detail the theory behind virtualization and this manual will **not** make you an expert [devop](http://en.wikipedia.org/wiki/DevOps). As always, becoming an expert requires a lot of practice and studying.

Anyway this manual will provide what's necessary to:

* create, clone, run, maintain and destroy virtual machines, locally (on your workstation) and remotely
* programmatically install, update and configure the software installed inside the virtual machine
* create different isolated environments for different development purposes
* publish your virtual machine on a public server

{pagebreak}

### The PHPBridge Project

While I was writing the manual I felt the need to make it more useful and real so I wrote it in such a way that it can fit in smoothly in the awesome [PHPBridge Project](http://phpbridge.org).

The PHPBridge Project, generously created by the [PHP Women group](http://phpwomen.org/), helps beginners to learn PHP and it's split in sections:

* the [**Installfest**](http://phpbridge.org/installfest/linux) provides some instructions for installing PHP on your computer
* the [**Intro to PHP**](http://phpbridge.org/intro-to-php) starts from scratch and takes you step-by-step through making a PHP application (called Suggestotron), one line at a time

Unfortunately, as written in the Installfest documentation, the virtual machine is not yet available for download.

> You will be provided with a copy of the virtual machine ("the box") on a USB thumb drive

This is not exactly a big deal because there are several ways to overcome the obstacle but it's definitely not ideal for a remote beginner.

So I thought that it would be nice to offer to the PHPBridge students a closer sight to some virtualization aspects and an easy way to produce their own virtual machines.

After reading this manual, you will end up with a Debian 64 bit virtual machine configured to run the final [Suggestotron application](http://phpbridge.org/intro-to-php/).
The virtual machine can be reused as many times as you want and it can become your default development environment for many projects and, optionally, you can decide to publish it on a Digital Ocean public server.

<!-- TODO double check this "learning routing" -->

I> If you are in the process of learning PHP you can start with reading this manual and then you can go ahead with the PHP Bridge project.
You will be capable to skip entirely the Installfest section and to continue with the [PHP Language](http://phpbridge.org/intro-to-php/php_language) chapter and, finally, to land to the [Creating a Data Class](http://phpbridge.org/intro-to-php/creating_a_data_class) chapter.


I> If you are not trying to learn PHP or you are not a PHP developer, don't worry you will not have any problem.

### Perspective {#perspective}

Virtualization is a huge topic and you can tackle it from many angles and it's really hard to write a manual that covers all the operating systems and all the virtualization softwares.

This is why I felt obliged to choose a perspective that, on one hand, will force some strict requirements and, on the other, will cut off some virtualization technologies, so don't be surprised by the following requirements and by my software selection.

### Limits and requirements

These are the minimum requirements for your workstation:

* 64 bit hardware
* A Linux Debian based operating system
* 5GB of free space
* 2GB of RAM

I> If you have a different hardware architecture or a different operating system you can still use this manual but be ready to adjust some commands.

These are the virtualization softwares in use:

* **Packer** to create a virtual machine starting from an iso image
* **VirtualBox** as the virtualization environment for the virtual machine
* **Vagrant** as virtualization manager
* **Ansible** as automation tool for installing and configure software inside the virtual machine
* **Digital Ocean** as hosting provider for the production environment

These are the list of services and softwares installed and running inside the virtual machine:

<!-- TODO double check the services installed in the vm -->
* **Nginx** as webserver
* **Mysql** as database
* **PHP**

Somebody will not be happy with my choices (sorry) but, at least, it brings some quick and effective results for some others.

I> I encourage you to adjust this manual for any different perspective and to re-publish it for free

{pagebreak}

## Copyleft

You can copy, share, modify and reuse accordingly to the [Creative Commons Attribution 3.0 Unported License](http://creativecommons.org/licenses/by/3.0/deed.en_US).

If you have got this manual from a friend I strongly suggest you to go and get a new fresh copy **for free** from the [Leanpub website](https://leanpub.com/pragmatic_virtualization) because in this way you can be notified by Leanpub about any future update of this manual. The updates, of course, will be for free.

While you are on Leanpub, you can consider donating to support the PHP Women cause. That would be really appreciated.

## The PHP Women cause

This manual and its author support the PHP Women group.

PHP Women is an inclusive and global network providing support within the PHP community.

Any donation for this manual will be entirely forwarded to the PHP Women group that will use the money to send to conferences developers who can not afford it.

Knowing the importance of conferences in building relationships with other developers and in encouring people to join the community, I think this is an awesome idea.

**Please help to break the isolation barrier!** :-)

## Acknowledgements

Many thanks to:

* [PHP Women](http://phpwomen.org/), of course, for the great job done with the [PHPBridge project](http://phpbridge.org/)
* [PHP The Right Way](http://www.phptherightway.com/) from which I took inspiration and some chunks of text :-)

<!--
TODO finish this before 100%

Also many thanks to these people for their motivating efforts in the PHP community:

* [Michelle Sanver](https://twitter.com/michellesanver)
* [Davey Shafik](https://twitter.com/dshafik)
* [Erika Heidi](https://twitter.com/erikaheidi)
* [Phil Sturgeon](https://twitter.com/philsturgeon)
* [Kayla Daniels](https://twitter.com/kayladnls)
* [Lorna Mitchell](https://twitter.com/lornajane)
* [Ben Edmunds](https://twitter.com/benedmunds)
-->